name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  test-and-docs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    env:
      RUN_ID: ${{ github.run_id }}
      LOG_FORMAT: json

    steps:
      # --- Checkout code ---------------------------------------------------
      - uses: actions/checkout@v3

      # --- Set up Python ---------------------------------------------------
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # --- Install package + dev & docs deps -------------------------------
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # assumes you defined [project.optional-dependencies] dev and docs
          pip install -e ".[dev,docs]"
          # fallback if mkdocs isnâ€™t in extras
          pip install mkdocs

      # --- Run test suite ---------------------------------------------------
      - name: Run pytest
        run: |
          mkdir -p tests/.reports
          pytest \
            --cov=src \
            --cov-report=xml:tests/.reports/coverage.xml \
            --junitxml=tests/.reports/junit.xml

      # --- Build documentation ---------------------------------------------
      - name: Build MkDocs
        run: mkdocs build --strict

      # --- Collect artefacts -----------------------------------------------
      - name: Upload artefacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ci-artifacts
          path: |
            tests/.reports/
            site/                    # MkDocs output
            ${{ env.RUN_ID }}.log    # optional runtime logs, if produced

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.12'
        run: bash <(curl -s https://codecov.io/bash) \
             -f tests/.reports/coverage.xml \
             -n "${{ github.job }}-${{ matrix.python-version }}"

      - name: Upload logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: structlog-${{ matrix.python-version }}
          path: |
            *.jsonl
